/* FILE:	HCDotMatrixAComun.h
   DATE:    19/03/13
   VERSION: 0.1
   AUTHOR:  Andrew Davies

Library header for 8x8 dot matrix LED displays

You may copy, alter and reuse this code in any way you like, but please leave
reference to HobbyComponents.com in your comments if you redistribute this code.
This software may not be used directly for the purpose of selling products that
directly compete with Hobby Components Ltd's own range of products.

THIS SOFTWARE IS PROVIDED "AS IS". HOBBY COMPONENTS MAKES NO WARRANTIES, WHETHER
EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ACCURACY OR LACK OF NEGLIGENCE.
HOBBY COMPONENTS SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR ANY DAMAGES,
INCLUDING, BUT NOT LIMITED TO, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY
REASON WHATSOEVER.
*/


#ifndef HCDotMatrixAComun_h
#define HCDotMatrixAComun_h

#include "Arduino.h"

/* Font bitmap */
const int Char_Set[95][8] = {
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},	// Char ( )
	{0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00},	// Char (!)
	{0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00},	// Char (")
	{0x6C, 0x6C, 0xFE, 0x6C, 0xFE, 0x6C, 0x6C, 0x00},	// Char (#)
	{0x18, 0x3E, 0x60, 0x3C, 0x06, 0x7C, 0x18, 0x00},	// Char ($)
	{0x00, 0xC6, 0xCC, 0x18, 0x30, 0x66, 0xC6, 0x00},	// Char (%)
	{0x38, 0x6C, 0x38, 0x76, 0xDC, 0xCC, 0x76, 0x00},	// Char (&)
	{0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00},	// Char (')
	{0x0C, 0x18, 0x30, 0x30, 0x30, 0x18, 0x0C, 0x00},	// Char (()
	{0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x18, 0x30, 0x00},	// Char ())
	{0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00},	// Char (*)
	{0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00},	// Char (+)
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30},	// Char (,)
	{0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00},	// Char (-)
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00},	// Char (.)
	{0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x00},	// Char (/)
	{0x38, 0x6C, 0xC6, 0xD6, 0xC6, 0x6C, 0x38, 0x00},	// Char (0)
	{0x18, 0x38, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x00},	// Char (1)
	{0x7C, 0xC6, 0x06, 0x1C, 0x30, 0x66, 0xFE, 0x00},	// Char (2)
	{0x7C, 0xC6, 0x06, 0x3C, 0x06, 0xC6, 0x7C, 0x00},	// Char (3)
	{0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x1E, 0x00},	// Char (4)
	{0xFE, 0xC0, 0xC0, 0xFC, 0x06, 0xC6, 0x7C, 0x00},	// Char (5)
	{0x38, 0x60, 0xC0, 0xFC, 0xC6, 0xC6, 0x7C, 0x00},	// Char (6)
	{0xFE, 0xC6, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x00},	// Char (7)
	{0x7C, 0xC6, 0xC6, 0x7C, 0xC6, 0xC6, 0x7C, 0x00},	// Char (8)
	{0x7C, 0xC6, 0xC6, 0x7E, 0x06, 0x0C, 0x78, 0x00},	// Char (9)
	{0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00},	// Char (:)
	{0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x30},	// Char (;)
	{0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00},	// Char (<)
	{0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00},	// Char (=)
	{0x60, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x60, 0x00},	// Char (>)
	{0x7C, 0xC6, 0x0C, 0x18, 0x18, 0x00, 0x18, 0x00},	// Char (?)
	{0x7C, 0xC6, 0xDE, 0xDE, 0xDE, 0xC0, 0x78, 0x00},	// Char (@)
	{0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0x00},	// Char (A)
	{0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xFC, 0x00},	// Char (B)
	{0x3C, 0x66, 0xC0, 0xC0, 0xC0, 0x66, 0x3C, 0x00},	// Char (C)
	{0xF8, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0xF8, 0x00},	// Char (D)
	{0xFE, 0x62, 0x68, 0x78, 0x68, 0x62, 0xFE, 0x00},	// Char (E)
	{0xFE, 0x62, 0x68, 0x78, 0x68, 0x60, 0xF0, 0x00},	// Char (F)
	{0x3C, 0x66, 0xC0, 0xC0, 0xCE, 0x66, 0x3A, 0x00},	// Char (G)
	{0xC6, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0x00},	// Char (H)
	{0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00},	// Char (I)
	{0x1E, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78, 0x00},	// Char (J)
	{0xE6, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0xE6, 0x00},	// Char (K)
	{0xF0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00},	// Char (L)
	{0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 0xC6, 0x00},	// Char (M)
	{0xC6, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0xC6, 0x00},	// Char (N)
	{0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00},	// Char (O)
	{0xFC, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0, 0x00},	// Char (P)
	{0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xCE, 0x7C, 0x0E},	// Char (Q)
	{0xFC, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0xE6, 0x00},	// Char (R)
	{0x3C, 0x66, 0x30, 0x18, 0x0C, 0x66, 0x3C, 0x00},	// Char (S)
	{0x7E, 0x7E, 0x5A, 0x18, 0x18, 0x18, 0x3C, 0x00},	// Char (T)
	{0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00},	// Char (U)
	{0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00},	// Char (V)
	{0xC6, 0xC6, 0xC6, 0xD6, 0xD6, 0xFE, 0x6C, 0x00},	// Char (W)
	{0xC6, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0xC6, 0x00},	// Char (X)
	{0x66, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x3C, 0x00},	// Char (Y)
	{0xFE, 0xC6, 0x8C, 0x18, 0x32, 0x66, 0xFE, 0x00},	// Char (Z)
	{0x3C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x00},	// Char ([)
	{0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x02, 0x00},	// Char (\)
	{0x3C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3C, 0x00},	// Char (])
	{0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00},	// Char (^)
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF},	// Char (_)
	{0x30, 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00},	// Char (`)
	{0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00},	// Char (a)
	{0xE0, 0x60, 0x7C, 0x66, 0x66, 0x66, 0xDC, 0x00},	// Char (b)
	{0x00, 0x00, 0x7C, 0xC6, 0xC0, 0xC6, 0x7C, 0x00},	// Char (c)
	{0x1C, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x76, 0x00},	// Char (d)
	{0x00, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00},	// Char (e)
	{0x3C, 0x66, 0x60, 0xF8, 0x60, 0x60, 0xF0, 0x00},	// Char (f)
	{0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8},	// Char (g)
	{0xE0, 0x60, 0x6C, 0x76, 0x66, 0x66, 0xE6, 0x00},	// Char (h)
	{0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00},	// Char (i)
	{0x06, 0x00, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3C},	// Char (j)
	{0xE0, 0x60, 0x66, 0x6C, 0x78, 0x6C, 0xE6, 0x00},	// Char (k)
	{0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00},	// Char (l)
	{0x00, 0x00, 0xEC, 0xFE, 0xD6, 0xD6, 0xD6, 0x00},	// Char (m)
	{0x00, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x00},	// Char (n)
	{0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00},	// Char (o)
	{0x00, 0x00, 0xDC, 0x66, 0x66, 0x7C, 0x60, 0xF0},	// Char (p)
	{0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0x1E},	// Char (q)
	{0x00, 0x00, 0xDC, 0x76, 0x60, 0x60, 0xF0, 0x00},	// Char (r)
	{0x00, 0x00, 0x7E, 0xC0, 0x7C, 0x06, 0xFC, 0x00},	// Char (s)
	{0x30, 0x30, 0xFC, 0x30, 0x30, 0x36, 0x1C, 0x00},	// Char (t)
	{0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00},	// Char (u)
	{0x00, 0x00, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00},	// Char (v)
	{0x00, 0x00, 0xC6, 0xD6, 0xD6, 0xFE, 0x6C, 0x00},	// Char (w)
	{0x00, 0x00, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0xFC},	// Char (y)
	{0x00, 0x00, 0x7E, 0x4C, 0x18, 0x32, 0x7E, 0x00},	// Char (z)
	{0x0E, 0x18, 0x18, 0x70, 0x18, 0x18, 0x0E, 0x00},	// Char ({)
	{0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00},	// Char (|)
	{0x70, 0x18, 0x18, 0x0E, 0x18, 0x18, 0x70, 0x00},	// Char (})
	{0x76, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},	// Char (~)
};



class HCDotMatrixAComun
{
  public:
  HCDotMatrixAComun(byte R0,byte R1,byte R2,byte R3,byte R4,byte R5,byte R6,byte R7,
		      byte C0,byte C1,byte C2,byte C3,byte C4,byte C5,byte C6,byte C7);

  void UpdateMatrix(void);

  void print(char TextString[], unsigned int xoffset);

  private:

  byte _PinOut_Row[8];
  byte _PinOut_Col[8];
  byte _Cur_Row;
  byte _Cur_Col;
  byte _CurentBitmap[8];


  int  _FirstCharIndex;
  byte _FirstCharColOffset;
  byte _FirstCharLength;
  byte _SecondCharLength;
  byte _RowIndex;
  byte _ColIndex;
  byte _Bufferindex;
  int  _StringLength;
};


#endif